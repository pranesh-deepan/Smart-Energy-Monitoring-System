import requests
import time
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# --- CONFIGURATION ---
BLYNK_TOKEN = "Nl8OuGV4KS6bY3PfJM3fUURBRxCnlWgT"
BLYNK_PIN = "V3"
CHECK_INTERVAL = 3600  # seconds (1 hour)
EMAIL_ADDRESS = "electricitycommissionofindia@gmail.com"
EMAIL_PASSWORD = "tszyszoklxwssjma"
RECIPIENT_EMAIL = "<YOUR_EMAIL_HERE>"  # Replace with the actual user email

# --- TARIFF SLABS (as per July 2024) ---
TARIFF = [
    (100, 0.00),
    (200, 2.35),
    (400, 4.70),
    (500, 6.30),
    (600, 8.40),
    (800, 9.45),
    (1000, 10.50)
]

def get_blynk_units():
    url = f"https://blynk.cloud/external/api/get?token={BLYNK_TOKEN}&{BLYNK_PIN}"
    try:
        resp = requests.get(url)
        if resp.status_code == 200:
            data = resp.json() if resp.headers.get('Content-Type','').startswith('application/json') else resp.text
            try:
                if isinstance(data, dict):
                    return float(data.get(BLYNK_PIN, 0))
                return float(data)
            except Exception:
                return 0.0
        else:
            return 0.0
    except Exception:
        return 0.0

def calculate_bill(units):
    remaining = units
    cost = 0.0
    last_limit = 0
    for limit, rate in TARIFF:
        if remaining <= 0:
            break
        slab_units = min(remaining, limit - last_limit)
        cost += slab_units * rate
        remaining -= slab_units
        last_limit = limit
    return round(cost, 2)

def send_bill_email(units, cost, recipient_email):
    subject = "Your Electricity Bill"
    body = f"""
    <h2>Electricity Bill Summary</h2>
    <p><b>Total Units Consumed:</b> {units:.2f} units</p>
    <p><b>Total Amount:</b> â‚¹{cost:.2f}</p>
    <hr>
    <p>This is an automated bill generated by your smart meter system.</p>
    """
    msg = MIMEMultipart()
    msg['From'] = EMAIL_ADDRESS
    msg['To'] = recipient_email
    msg['Subject'] = subject
    msg.attach(MIMEText(body, 'html'))
    try:
        with smtplib.SMTP_SSL('smtp.gmail.com', 465) as smtp:
            smtp.login(EMAIL_ADDRESS, EMAIL_PASSWORD)
            smtp.send_message(msg)
        print(f"Bill email sent to {recipient_email}!")
    except Exception as e:
        print(f"Failed to send email: {e}")

def main():
    # --- One-time demo: send bill for 200 units ---
    units = 200
    cost = calculate_bill(units)
    send_bill_email(units, cost, RECIPIENT_EMAIL)
    # --- Background loop for real readings ---
    while True:
        units = get_blynk_units()
        cost = calculate_bill(units)
        send_bill_email(units, cost, RECIPIENT_EMAIL)
        time.sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    main()
